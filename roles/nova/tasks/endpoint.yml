- block:
    - name: Test Nova User does it exist
      shell: . /root/admin-openrc.sh && openstack user list|grep {{NOVA_USER}} || exit 0
      changed_when: false
      register: nova_user

    - name: Create Nova User
      shell: . /root/admin-openrc.sh && openstack user create --domain default --password {% if GLOBAL_PASS %}{{GLOBAL_PASS}}{% else %}{{NOVA_PASS}}{% endif %} {{NOVA_USER}}
      when: nova_user.stdout == ""

    - name: Add Nova User to Admin Role
      shell: . /root/admin-openrc.sh && openstack role add --project service --user {{NOVA_USER}} admin

    - name: Test Nova Service does it exist
      shell: . /root/admin-openrc.sh && openstack service list|grep nova || exit 0
      changed_when: false
      register: nova_service

    - name: Create Nova Service
      shell: . /root/admin-openrc.sh && openstack service create --name nova --description "OpenStack Compute" compute
      when: nova_service.stdout == ""
 
    - name: Test Nova Endpoint
      shell: . /root/admin-openrc.sh && openstack endpoint list|grep nova || exit 0
      changed_when: false
      register: nova_endpoint

    - name: Create Nova Public Endpoint
      shell: . /root/admin-openrc.sh && openstack endpoint create --region {{REGION_NAME}} compute public http://{{VIRTUALIP_FQDN}}:{{NOVA_API_PORT}}/v2.1
      when: nova_endpoint.stdout == ""

    - name: Create Nova Internal Endpoint
      shell: . /root/admin-openrc.sh && openstack endpoint create --region {{REGION_NAME}} compute internal http://{{VIRTUALIP_FQDN}}:{{NOVA_API_PORT}}/v2.1
      when: nova_endpoint.stdout == ""

    - name: Create Nova admin Endpoint
      shell: . /root/admin-openrc.sh && openstack endpoint create --region {{REGION_NAME}} compute admin http://{{VIRTUALIP_FQDN}}:{{NOVA_API_PORT}}/v2.1
      when: nova_endpoint.stdout == ""
  delegate_to: "{{groups['cloud-controller'][0]}}"
  run_once: yes
